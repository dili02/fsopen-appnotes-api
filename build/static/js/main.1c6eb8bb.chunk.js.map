{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","Note","content","date","importance","toggleImportance","label","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","note","important","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","returnedNote","concat","value","onChange","target","type","map","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c6eb8bb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n/* const baseUrl = \"http://localhost:3001/notes\"; */\r\n/* const baseUrl = 'http://localhost:3001/api/notes' */\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Note = ({ content, date, importance, toggleImportance }) => {\r\n  const label = importance ? \"make not important\" : \"make important\";\r\n  return (\r\n    <li className=\"note\">\r\n      <p>{content}</p>\r\n      <p>{date}</p>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport noteService from \"./services/notes\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => setNewNote(event.target.value);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            content={note.content}\n            date={note.date}\n            importance={note.important}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n/* const notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n]; */\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}